module testbench;

  reg [3:0] A, B;      // 4-bit input operands
  reg Cin, Bin;         // Carry-in (for RCA) and Borrow-in (for RCS)
  wire [3:0] S;         // 4-bit Sum or Difference
  wire Cout, Bout;      // Carry-out (for RCA) and Borrow-out (for RCS)

  // Instantiate the RCA (Ripple Carry Adder)
   4bitadde.sv (
    .A(A), 
    .B(B), 
    .Cin(Cin), 
    .S(S), 
    .Cout(Cout)
  );

  // Instantiate the RCS (Ripple Carry Subtractor)
  4_bit_subtractor.sv  (
    .A(A),
    .B(B),
    .Bin(Bin),
    .D(S),
    .Bout(Bout)
  );

  initial begin
    // Initialize signals
    $display("4-bit RCA and RCS Testbench");

    // Test case 1: Unsigned Addition (A = 5, B = 3)
    A = 4'b0101;  // A = 5
    B = 4'b0011;  // B = 3
    Cin = 0;      // No initial carry
    #10;
    $display("Unsigned Addition: A = %b, B = %b, Sum = %b, Carry Out = %b", A, B, S, Cout);

    // Test case 2: Signed Addition (A = -3, B = 2)
    A = 4'b1101;  // A = -3 (in 2's complement)
    B = 4'b0010;  // B = 2
    Cin = 0;      // No initial carry
    #10;
    $display("Signed Addition: A = %b, B = %b, Sum = %b, Carry Out = %b", A, B, S, Cout);

    // Test case 3: Unsigned Subtraction (A = 6, B = 3)
    A = 4'b0110;  // A = 6
    B = 4'b0011;  // B = 3
    Bin = 1;      // Set Bin to 1 for two's complement subtraction
    #10;
    $display("Unsigned Subtraction: A = %b, B = %b, Difference = %b, Borrow Out = %b", A, B, S, Bout);

    // Test case 4: Signed Subtraction (A = -4, B = -2)
    A = 4'b1100;  // A = -4
    B = 4'b1110;  // B = -2 (in 2's complement)
    Bin = 1;      // Set Bin to 1 for two's complement subtraction
    #10;
    $display("Signed Subtraction: A = %b, B = %b, Difference = %b, Borrow Out = %b", A, B, S, Bout);

    // Test case 5: Unsigned Overflow Addition (A = 15, B = 1)
    A = 4'b1111;  // A = 15
    B = 4'b0001;  // B = 1
    Cin = 0;      // No initial carry
    #10;
    $display("Unsigned Overflow Addition: A = %b, B = %b, Sum = %b, Carry Out = %b", A, B, S, Cout);

    // Test case 6: Signed Overflow Addition (A = 7, B = 5)
    A = 4'b0111;  // A = 7
    B = 4'b0101;  // B = 5
    Cin = 0;      // No initial carry
    #10;
    $display("Signed Overflow Addition: A = %b, B = %b, Sum = %b, Carry Out = %b", A, B, S, Cout);

    // Test case 7: Unsigned Borrow Subtraction (A = 2, B = 6)
    A = 4'b0010; 
    B = 4'b0110; 
    Bin = 1;      
    #10;
    $display("Unsigned Borrow Subtraction: A = %b, B = %b, Difference = %b, Borrow Out = %b", A, B, S, Bout);

    // Test case 8: Signed Borrow Subtraction (A = -2, B = 3)
    A = 4'b1110;  
    B = 4'b0011;  
    Bin = 1;      
    #10;
    $display("Signed Borrow Subtraction: A = %b, B = %b, Difference = %b, Borrow Out = %b", A, B, S, Bout);

    // End simulation
    $finish;
  end

endmodule
